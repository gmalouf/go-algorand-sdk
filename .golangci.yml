version: "2"
run:
  tests: false
linters:
  default: none
  enable:
    - copyloopvar
    - errcheck
    - govet
    - ineffassign
    - misspell
    - nilerr
    - nolintlint
    - revive
    - staticcheck
    - unused
  settings:
    nolintlint:
      # require comments like "//nolint:errcheck // Explanation of why we are ignoring linter here..."
      require-explanation: true
      # require naming a specific linter X using //nolint:X
      require-specific: true
    staticcheck:
      checks:
        - all
        - '-ST1000' # don't require package comments
        - '-ST1003' # don't require currentDBRound vs currentDbRound
        - '-SA3001' # we assign to b.N in several benchmarks
        - '-QF1008' # ignore suggestions to remove embedded fields (e.g., txn.SignedTxn.Txn -> txn.Txn)
  exclusions:
    generated: lax
    rules:
      # Examples directory is allowed to skip error checking for brevity
      - linters: errcheck
        path: examples/
      - linters: revive
        text: '^package-comments: should have a package comment'
      # revive: types is an acceptable package name in this codebase
      - linters: revive
        path: types/
        text: 'var-naming: avoid meaningless package names'
      # Examples directory does not require comments on exported functions
      - linters: revive
        path: examples/
        text: 'exported: exported function .* should have comment or be unexported'
      # ignore issues about the way we use _struct fields to define encoding settings
      - linters: unused
        path: (.+)\.go$
        text: 'field _struct is unused'
      # Test utilities and helpers may have code that look unused, but is being used in another file
      - path: test/helpers.go
        text: is unused
      - path: test/utilities.go
        text: is unused
      # Ignore unused fields in types that are copied from go-algorand
      - path: types/
        text: is unused
        # ignore issues about the way we use _struct fields to define encoding settings
      - path: (.+)\.go$
        text: '`_struct` is unused'
        # Enable some golangci-lint default exception rules:
        # "EXC0001 errcheck: Almost all programs ignore errors on these functions and in most cases it's ok"
      - path: (.+)\.go$
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv). is not checked
        # "EXC0005 staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore"
      - path: (.+)\.go$
        text: ineffective break statement. Did you mean to break out of the outer loop
    paths:
      # Don't run linter on generated files
      - client/v2
      - third_party$
      - builtin$
      - examples$
issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0
  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
severity:
  default: error
formatters:
  enable:
    - gci
    - gofmt
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/algorand)
        - prefix(github.com/algorand/go-algorand-sdk)
  exclusions:
    generated: lax
    paths:
      - client/v2
      - third_party$
      - builtin$
      - examples$
